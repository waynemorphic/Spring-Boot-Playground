version: "3.8"
services:
  rest:
    container_name: rest_playground
    build:
      dockerfile: Dockerfile
    image: spring-boot-playground:latest
    env_file: .env
    ports:
      - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url": "jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?useSSL=false&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true",
        "spring.datasource.username": "$MYSQLDB_USERNAME",
        "spring.datasource.password": "$MYSQLDB_PASSWORD",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL8Dialect",
        "spring.jpa.hibernate.ddl-auto" : "create"
      }'
    depends_on:
      mysqldb:
        condition: service_healthy
    networks:
      - playground-network
  mysqldb:
    image: mysql:latest
    container_name: mysqldb
    env_file: .env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    expose:
      - '$MYSQLDB_DOCKER_PORT'
    volumes:
      - my-db:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "mysqldb", "-u", "root", "-p$${MYSQL_ROOT_PASSWORD}"]
      timeout: 20s
      retries: 10
    networks:
      - playground-network
  run_liquibase_changelog:
    image: liquibase/liquibase:latest
    container_name: run_liquibase_changelog
    depends_on:
      - mysqldb
    networks:
      - playground-network
    env_file: .env
    volumes:
    - ./src/main/resources/db/changelog:/liquibase/changelog
    environment:
    - INSTALL_MYSQL=true
    - SPRING_DATASOURCE_DRIVER-CLASS=com.mysql.cj.jdbc.Driver
    command:
      - --url=jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE
      - --changeLogFile=/liquibase/changelog/db.auto_generated_compose_changelog.yaml
      - --log-level=error
      - --username=$MYSQLDB_USERNAME
      - --password=$MYSQLDB_PASSWORD
      - --overwriteOutputFile=true
      - generateChangeLog
volumes:
  my-db:
networks:
  playground-network:

# version: specifies the format version to use. '3.8' is the latest version
# services: Each object in this key defines a service/container. It is mandatory
# build: When given, docker-compose builds an image from a Dockerfile
# context: When given, it gives the build directory where the Dockerfile is looked up
# dockerfile: When given, it is an alternative name for a Dockerfile
# image: Instructs docker which name to give the image when build features are used. Otherwise, image is looked up from
#         library or remote-registry
# networks: Identifier for named networks to use. The given name-value must be listed in the networks section.
# networks: Specifies the networks available to the listed services. In the above, docker-compose creates a named network
#         of type 'bridge'. If external is set to true, it will use an existing one with a given name.

# Liquibase runtime exception for mysql driver not available -> add environment variable with INSTALL_MYSQL=true


# After these docker-compose configs are set, run:
#  'docker-compose config' --> to check for syntax errors
#  'docker-compose up --build' --> to build the image, create the defined containers and start service in one command
#  'docker-compose down' --> to stop the containers, remove them from docker and remove the connected networks from it.